9. Which classes are aggregates of other classes?
Class Cart and class Store are the aggregates of class Media.
Class CompactDisc is the aggregate of class Track.


10. If the passing object is not an instance of Media, what happens?
If the passing object is not an instance of Media, it returns False.

11. Observe what happens and explain in detail

Each type will return their toString method.
The toString() method is overridden in a subclass to provide a string more detail about of the object.

12.
- What class should implement the Comparable interface?

The class that have the item to compare should implement the Comparable interface. In this lab it is class Media.

- In those classes, how should you implement the compareTo() method be to reflect the ordering that we want?

To sort the items by title, the compareTo() method would compare the titles of the items. To sort the items by cost, the compareTo() method would compare the costs of the items.

- Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?

Yes, we can have two ordering rules of the item (by title then cost and by cost then title) if we use Comparable interface approach. We can do this by creating two different implementations of the Comparable interface. One implementation would sort the items by title, then cost. The other implementation would sort the items by cost, then title.

- Suppose the DVDs has a different ordering rule from the other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?

To allow DVDs to have a different ordering rule from the other media types, the DVD class would override the compareTo() method to sort the DVDs by title, then decreasing length, then cost.
